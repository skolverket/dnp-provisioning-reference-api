openapi: 3.0.0
info:
  title: Skolverket Reference API - Data ingest endpoint
  description: OpenAPI specification for the data ingest endpoint of Reference API.
  version: 0.0.1
servers:
  - url: /
    description: Current server.
tags:
  - description: Handles persons and a persons relations.
    name: Person
  - description: Groups.
    name: Groups
  - description: Activities.
    name: Activities
  - description: Duties
    name: Duties
  - description: Logging.
    name: Logging
  - description: Statistics.
    name: Statistics
paths:
  /persons:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons'
        required: true
      responses:
        "201":
          description: Persons created.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Person
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons'
        required: true
      responses:
        "201":
          description: Persons updated.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Person
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons_delete'
        required: true
      responses:
        "202":
          description: Persons has been deleted.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Person
  /groups:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
        required: true
      responses:
        "201":
          description: Groups created.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:

          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Groups
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
        required: true
      responses:
        "201":
          description: Groups updated.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Groups
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups_delete'
        required: true
      responses:
        "202":
          description: Groups has been deleted.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Groups
  /activities:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activities'
        required: true
      responses:
        "201":
          description: Activities created.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:

          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Activities
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activities'
        required: true
      responses:
        "201":
          description: Activities updated.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Activities
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activities_delete'
        required: true
      responses:
        "202":
          description: Activities has been deleted.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Activities
  /duties:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Duties'
        required: true
      responses:
        "201":
          description: Duties created.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:

          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Duties
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Duties'
        required: true
      responses:
        "201":
          description: Duties updated.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Duties
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Duties_delete'
        required: true
      responses:
        "202":
          description: Duties has been deleted.
        "400":
          description: Bad request.
        "403":
          description: Åtkomst nekad.
        default:
          description: Okänt fel.
      summary: Hämta en lista med personer.
      tags:
        - Duties
  /logs:
    get:
      parameters:
        - description: "Number of entities that will be returned. If more pages are available, see 'pageToken'. \n"
          in: query
          name: limit
          required: false
          schema:
            minimum: 1
            type: integer
        - description: "An opaque token provided by the server in a previous response. \n"
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/LogEntry'
                  pageToken:
                    description: |
                      Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
                    nullable: true
                    type: string
        "403":
          description: Access denied.
        default:
          description: Unknown error.
      summary: Skapa en prenumeration
      tags:
        - Logging
  /statistics:
    get:
      parameters:
        - description: "Number of entities that will be returned. If more pages are available, see 'pageToken'. \n"
          in: query
          name: limit
          required: false
          schema:
            minimum: 1
            type: integer
        - description: "An opaque token provided by the server in a previous response. \n"
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatisticsEntry'
                  pageToken:
                    description: |
                      Om värdet är null finns inget mer att hämta på det token som skickades in som query parameter.
                    nullable: true
                    type: string
        "403":
          description: Access denied.
        default:
          description: Unknown error.
      summary: Skapa en prenumeration
      tags:
        - Statistics
components:
  schemas:
    Persons:
      properties:
        persons:
          items:
            $ref: '#/components/schemas/Person'
          type: array
      required:
        - persons
      type: object
    Person:
      properties:
        id:
          description: ID of Person
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        givenName:
          description: Given name, first name of person.
          type: string
        middleName:
          description: Middle name of person.
          type: string
        familyName:
          description: Last name of person.
          type: string
        eduPersonPrincipalNames:
          description: "EPPN \n"
          items:
            type: string
          type: array
          uniqueItems: true
        civicNo:
          $ref: '#/components/schemas/Person_civicNo'
        emails:
          description: A list of emails with type.
          items:
            $ref: '#/components/schemas/Email'
          type: array
        enrolments:
          description: En lista med inskrivningar för personen
          items:
            $ref: '#/components/schemas/Enrolment'
          type: array
      required:
        - id
        - givenName
        - familyName
        - eduPersonPrincipalNames
        - civicNo
      type: object
    Persons_delete:
      properties:
        persons:
          items:
            $ref: '#/components/schemas/ObjectReference'
          type: array
      required:
        - persons
      type: object
    Groups:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
      required:
        - groups
      type: object
    Group:
      description: "Groups\n"
      properties:
        id:
          description: UUID for the group
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        displayName:
          description: Group display name.
          type: string
        groupType:
          $ref: '#/components/schemas/GroupTypesEnum'
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        organisation:
          $ref: '#/components/schemas/ObjectReference'
      required:
        - displayName
        - groupType
        - id
        - meta
        - organisation
      title: Group
      type: object
    Groups_delete:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/ObjectReference'
          type: array
      required:
        - persons
      type: object
    Activities:
      properties:
        activities:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
      required:
        - data
      type: object
    Activity:
      properties:
        id:
          description: UUID for Activity.
          format: uuid
          type: string
        displayName:
          description: Display name for activity.
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        activityType:
          enum:
            - Undervisning
            - Elevaktivitet
            - Provaktivitet
            - Läraraktivitet
            - Övrigt
          title: Code_ActivityType
          type: string
        groups:
          description: De grupper som är kopplade till aktiviteten.
          items:
            $ref: '#/components/schemas/ObjectReference'
          minItems: 1
          type: array
        teachers:
          description: De lärare (Duty-objekt) som är kopplade till aktiviteten.
          items:
            $ref: '#/components/schemas/DutyAssignment'
          type: array
        organisation:
          $ref: '#/components/schemas/ObjectReference'
        parentActivity:
          $ref: '#/components/schemas/ObjectReference'
      required:
        - id
        - displayName
        - groups
        - organisation
      title: Activity
      type: object
    Activities_delete:
      properties:
        activities:
          items:
            $ref: '#/components/schemas/ObjectReference'
          type: array
      required:
        - persons
      type: object
    Duties:
      properties:
        duties:
          items:
            $ref: '#/components/schemas/Duty'
          type: array
      required:
        - data
      type: object
    Duty:
      description: Duty
      properties:
        id:
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        person:
          $ref: '#/components/schemas/ObjectReference'
        dutyAt:
          $ref: '#/components/schemas/ObjectReference'
        dutyRole:
          allOf:
            - $ref: '#/components/schemas/DutyRoleEnum'
      required:
        - id
        - dutyAt
        - dutyRole
      title: Duty
      type: object
    Duties_delete:
      properties:
        duties:
          items:
            $ref: '#/components/schemas/ObjectReference'
          type: array
      required:
        - persons
      type: object
    LogEntry:
      description: "Log entry, where errors will be submitted by Skolverket SS12000 client. \n"
      properties:
        message:
          description: Message explaining the fault.
          type: string
        messageType:
          description: SS12000 client unique ID.
          type: string
        resourceType:
          $ref: '#/components/schemas/EndPointsEnum'
        resourceId:
          description: Resource related to the error.
          format: uuid
          type: string
        resourceUrl:
          description: Resource URL related to the error.
          format: uri
          type: string
        severityLevel:
          description: Severity level of the log.
          enum:
            - Info
            - Warning
            - Error
          type: string
        timeOfOccurance:
          description: Timestamp of log entry.
          format: date-time
          type: string
      required:
        - message
        - severityLevel
      title: LogEntry
      type: object
    StatisticsEntry:
      description: Statistics regarding synchronization.
      properties:
        resourceType:
          $ref: '#/components/schemas/EndPointsEnum'
        newCount:
          description: Number of created entities.
          type: integer
        updatedCount:
          description: Number of updated entities.
          type: integer
        deletedCount:
          description: Number of deleted entities.
          type: integer
        resourceUrl:
          description: URL related to synchronization.
          format: uri
          type: string
        timeOfOccurance:
          description: Timestamp for statistics entry.
          format: date-time
          type: string
      required:
        - deletedCount
        - newCount
        - resourceType
        - updatedCount
      title: statisticsEntry
      type: object
    DutyAssignment:
      properties:
        duty:
          $ref: '#/components/schemas/ObjectReference'
      required:
        - duty
      title: DutyAssignment
      type: object
    Meta:
      properties:
        created:
          description: "Timestamp according to RFC 3339 format e.g '2015-12-12T10:30:00+01:00' \n"
          format: date-time
          type: string
        modified:
          description: "Timestamp according to RFC 3339 format e.g '2015-12-12T10:30:00+01:00' \n"
          format: date-time
          type: string
      readOnly: true
      required:
        - created
        - modified
      title: Meta
      type: object
    Person_civicNo:
      description: Civic Number, personnummer.
      properties:
        value:
          description: "Person Civic No.\n"
          type: string
        nationality:
          default: SE
          description: "Country code for issuing country according to ISO 3166-1 alpha-2.\n"
          type: string
      required:
        - value
      type: object
    Email:
      properties:
        value:
          format: email
          type: string
        type:
          enum:
            - Privat
            - Skola elev
            - Skola personal
            - Arbete övrigt
          title: Code_EmailType
          type: string
      required:
        - type
        - value
      title: Email
      type: object
    Enrolment:
      properties:
        enroledAt:
          $ref: '#/components/schemas/SchoolUnitReference'
        schoolYear:
          maximum: 10
          minimum: 0
          type: integer
        schoolType:
          $ref: '#/components/schemas/SchoolTypesEnum'
        cancelled:
          description: Is enrolment canceled
          type: boolean
        educationCode:
          description: Education code for the enrolment.
          type: string
        programme:
          $ref: '#/components/schemas/ObjectReference'
        specification:
          description: "\n"
          type: string
      required:
        - enroledAt
        - schoolType
      title: Enrolment
      type: object
    SchoolUnitReference:
      allOf:
        - $ref: '#/components/schemas/ObjectReference'
        - description: References school unit.
          title: OrganisationReference
    ObjectReference:
      properties:
        id:
          format: uuid
          type: string
        displayName:
          description: "Display name \n"
          readOnly: true
          type: string
      required:
        - id
      title: ObjectReference
      type: object
    EndPointsEnum:
      enum:
        - Activity
        - Duty
        - Group
        - Person
        - Organisation
      title: Code_ObjectType
      type: string
    SchoolTypesEnum:
      description: "School types"
      enum:
        - FS
        - FKLASS
        - FTH
        - OPPFTH
        - GR
        - GRS
        - TR
        - SP
        - SAM
        - GY
        - GYS
        - VUX
        - VUXSFI
        - VUXGR
        - VUXGY
        - VUXSARGR
        - VUXSARTR
        - VUXSARGY
        - SFI
        - SARVUX
        - SARVUXGR
        - SARVUXGY
        - KU
        - YH
        - FHS
        - STF
        - KKU
        - HS
        - ABU
        - AU
      title: Code_SchoolType
      type: string
    GroupTypesEnum:
      enum:
        - Undervisning
        - Klass
        - Mentor
        - Provgrupp
        - Schema
        - Avdelning
        - Personalgrupp
        - Övrigt
      title: Code_GroupType
      type: string
    DutyRoleEnum:
      enum:
        - Rektor
        - Lärare
        - Förskollärare
        - Barnskötare
        - Bibliotekarie
        - Lärarassistent
        - Fritidspedagog
        - Annan personal
        - Studie- och yrkesvägledare
        - Förstelärare
        - Kurator
        - Skolsköterska
        - Skolläkare
        - Skolpsykolog
        - Speciallärare/specialpedagog
        - Skoladministratör
        - Övrig arbetsledning
        - Övrig pedagogisk personal
        - Förskolechef
      title: Code_DutyRole
      type: string
